<article xmlns="http://docbook.org/ns/docbook" version="5.0">
<title>Article wrapper</title>

<programlistingco>
<areaspec>
<area coords="1" xml:id="prologue"/>
<area coords="4" xml:id="skipeof" linkends="skipeof-desc"/>
<areaset xml:id="xreq">
<area coords="9" xml:id="require1"/>
<area coords="10" xml:id="require2"/>
</areaset>
<area coords="11 50" xml:id="use"/>
<area coords="27" xml:id="funccall"/>
</areaspec>
<programlisting>@rem = '--*-Perl-*--
@echo off
perl.exe %_batchname %$
goto endofperl
@rem ';

# Compress mail...

require 'n:/home/nwalsh/lib/cygnus.pl';
require 'timelocal.pl';
use Cwd;

select (STDERR); $| = 1;
select (STDOUT); $| = 1;

@DIRS = ("/home/nwalsh/Mail");
while (@DIRS) {
    $dir = shift @DIRS;
    opendir (DIR, $dir);
    while ($fname = readdir(DIR)) {
        $file = "$dir/$fname";
        next if ! -d $file;
        next if $fname =~ /^\.\.?$/;

        print "$file\n";
        push (@DIRS, $file);
        &amp;compress ($file);
    }
}

exit;</programlisting>
<calloutlist>
<callout arearefs="prologue">
<para>The prologue handles embedding a Perl script in a DOS batch file.</para>
</callout>
<callout arearefs="skipeof" xml:id="skipeof-desc">
<para>The <literal>goto</literal> statement, interpreted by the DOS
batch file interpreter, skips over the body of the Perl script. (Note
that this callout has an “id” attribute that is referenced by a
“linkends” attribute on the callout bug for line 4 above.)</para>
</callout>
<callout arearefs="require1 require2">
<para>The <literal>require</literal> statement sources in external program
fragments.</para>
</callout>
<callout arearefs="use">
<para>The <literal>use</literal> statement is similar, but has additional
utility.  It is a Perl5 function.  (Note that this callout area specifies
both a line and a column.)</para>
</callout>
<callout arearefs="funccall">
<para>This is a user subroutine call.</para>
</callout>
</calloutlist>
</programlistingco>

</article>
