namespace ctrl = "http://nwalsh.com/xmlns/schema-control/"
namespace rng  = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://purl.oclc.org/dsdl/schematron"
namespace db = "http://docbook.org/ns/docbook"
namespace xlink = "http://www.w3.org/1999/xlink"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
default namespace = "http://docbook.org/ns/docbook"

db.xlink.extended.type.attribute =
   [
      db:refpurpose [ "Identifies the XLink extended link type" ]
      s:pattern [
         s:title [ "XLink extended placement" ]
         s:rule [
            context = "*[@xlink:type='extended']"
            s:assert [
               test = "not(parent::*[@xlink:type='extended'])"
               "An XLink extended type element may not occur as the direct child of an XLink extended type element."
            ]
         ]
      ]
   ]
   attribute xlink:type {
      ## An XLink extended link type
      "extended"
   }

db.xlink.locator.type.attribute =
   [
      db:refpurpose [ "Identifies the XLink locator link type" ]
      s:pattern [
         s:title [ "XLink locator placement" ]
         s:rule [
            context = "*[@xlink:type='locator']"
            s:assert [
               test = "parent::*[@xlink:type='extended']"
               "An XLink locator type element must occur as the direct child of an XLink extended type element."
            ]
         ]
      ]
   ]
   attribute xlink:type {
      ## An XLink locator link type
      "locator"
   }

db.xlink.arc.type.attribute =
   [
      db:refpurpose [ "Identifies the XLink arc link type" ]
      s:pattern [
         s:title [ "XLink arc placement" ]
         s:rule [
            context = "*[@xlink:type='arc']"
            s:assert [
               test = "parent::*[@xlink:type='extended']"
               "An XLink arc type element must occur as the direct child of an XLink extended type element."
            ]
         ]
      ]
   ]
   attribute xlink:type {
      ## An XLink arc link type
      "arc"
   }

db.xlink.resource.type.attribute =
   [
      db:refpurpose [ "Identifies the XLink resource link type" ]
      s:pattern [
         s:title [ "XLink resource placement" ]
         s:rule [
            context = "*[@xlink:type='resource']"
            s:assert [
               test = "parent::*[@xlink:type='extended']"
               "An XLink resource type element must occur as the direct child of an XLink extended type element."
            ]
         ]
      ]
   ]
   attribute xlink:type {
      ## An XLink resource link type
      "resource"
   }

db.xlink.title.type.attribute =
   [
      db:refpurpose [ "Identifies the XLink title link type" ]
      s:pattern [
         s:title [ "XLink title placement" ]
         s:rule [
            context = "*[@xlink:type='title']"
            s:assert [
               test = "parent::*[@xlink:type='extended'] or parent::*[@xlink:type='locator'] or parent::*[@xlink:type='arc']"
               "An XLink title type element must occur as the direct child of an XLink extended, locator, or arc type element."
            ]
         ]
      ]
   ]
   attribute xlink:type {
      ## An XLink title link type
      "title"
   }

db.xlink.extended.link.attributes =
   db.xlink.extended.type.attribute
 & db.xlink.role.attribute?
 & db.xlink.title.attribute?

db.xlink.locator.link.attributes =
   db.xlink.locator.type.attribute
 & db.xlink.href.attribute
 & db.xlink.role.attribute?
 & db.xlink.title.attribute?
 & db.xlink.label.attribute?

db.xlink.arc.link.attributes =
   db.xlink.arc.type.attribute
 & db.xlink.arcrole.attribute?
 & db.xlink.title.attribute?
 & db.xlink.show.attribute?
 & db.xlink.actuate.attribute?
 & db.xlink.from.attribute?
 & db.xlink.to.attribute?

db.xlink.resource.link.attributes =
   db.xlink.resource.type.attribute
 & db.xlink.role.attribute?
 & db.xlink.title.attribute?
 & db.xlink.label.attribute?

db.xlink.title.link.attributes =
   db.xlink.title.type.attribute

db.xlink.attributes |=
   db.xlink.extended.link.attributes
 | db.xlink.locator.link.attributes
 | db.xlink.arc.link.attributes
 | db.xlink.resource.link.attributes
 | db.xlink.title.link.attributes

# /Hack hack hack

db.info.elements |= db.extendedlink

db.xlink.from.attribute =
   [
      db:refpurpose [ "Specifies the XLink traversal-from" ]
   ]
   attribute xlink:from { xsd:NMTOKEN }

db.xlink.label.attribute =
   [
      db:refpurpose [ "Specifies the XLink label" ]
   ]
   attribute xlink:label { xsd:NMTOKEN }

db.xlink.to.attribute =
   [
      db:refpurpose [ "Specifies the XLink traversal-to" ]
   ]
   attribute xlink:to { xsd:NMTOKEN }

# ======================================================================

[
   db:refname [ "extendedlink" ]
   db:refpurpose [ "An XLink extended link" ]
]
div {

   db.extendedlink.role.attribute = attribute role { text }

   db.extendedlink.attlist =
      db.extendedlink.role.attribute?
    & db.common.attributes
    & [ a:defaultValue="extended"
        db:refpurpose [ "Identifies the XLink link type " ]
      ]
      attribute xlink:type {
         ## An XLink extended link
         "extended"
      }?
    & db.xlink.role.attribute?
    & db.xlink.title.attribute?

   db.extendedlink =
      element extendedlink {
         db.extendedlink.attlist,
         (db.locator|db.arc|db.link)+
      }
}

# ======================================================================

[
   db:refname [ "locator" ]
   db:refpurpose [ "An XLink locator in an " db:tag [ "extendedlink" ]]
]
div {

   db.locator.role.attribute = attribute role { text }

   db.locator.attlist =
      db.locator.role.attribute?
    & db.common.attributes
    & [ a:defaultValue="locator"
        db:refpurpose [ "Identifies the XLink link type " ]
      ]
      attribute xlink:type {
         ## An XLink locator link
         "locator"
      }?
    & db.xlink.href.attribute
    & db.xlink.role.attribute?
    & db.xlink.title.attribute?
    & db.xlink.label.attribute?

   db.locator =
      element locator {
         db.locator.attlist,
         empty
      }
}

# ======================================================================

[
   db:refname [ "arc" ]
   db:refpurpose [ "An XLink arc in an " db:tag [ "extendedlink" ] ]
]
div {

   db.arc.role.attribute = attribute role { text }

   db.arc.attlist =
      db.arc.role.attribute?
    & db.common.attributes
    & [ a:defaultValue="arc"
        db:refpurpose [ "Identifies the XLink link type " ]
      ]
      attribute xlink:type {
         ## An XLink arc link
         "arc"
      }?
    & db.xlink.arcrole.attribute?
    & db.xlink.title.attribute?
    & db.xlink.show.attribute?
    & db.xlink.actuate.attribute?
    & db.xlink.from.attribute?
    & db.xlink.to.attribute?

   db.arc =
      element arc {
         db.arc.attlist,
         empty
      }
}

