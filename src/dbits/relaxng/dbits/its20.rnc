default namespace its = "http://www.w3.org/2005/11/its"
namespace xlink = "http://www.w3.org/1999/xlink"
namespace local = ""

include "its20-types.rnc"

its-attribute.translate = attribute its:translate { its-translate.type }
its-attribute.translate.nons = attribute translate { its-translate.type }

its-attribute.dir = attribute its:dir { its-dir.type }
its-attribute.dir.nons = attribute dir { its-dir.type }

its-attribute.locNote = attribute its:locNote { its-locNote.type }
its-attribute.locNote.nons = attribute locNote { its-locNote.type }

its-attribute.locNoteType = attribute its:locNoteType { its-locNoteType.type }
its-attribute.locNoteType.nons = attribute locNoteType { its-locNoteType.type }

its-attribute.locNoteRef = attribute its:locNoteRef { its-locNoteRef.type }
its-attribute.locNoteRef.nons = attribute locNoteRef { its-locNoteRef.type }

its-attribute.termInfoRef = attribute its:termInfoRef { its-termInfoRef.type }
its-attribute.termInfoRef.nons = attribute termInfoRef { its-termInfoRef.type }

its-attribute.term = attribute its:term { its-term.type }
its-attribute.term.nons = attribute term { its-term.type }

its-attribute.termConfidence = attribute its:termConfidence { its-termConfidence.type }
its-attribute.termConfidence.nons = attribute termConfidence { its-termConfidence.type }

its-attribute.withinText = attribute its:withinText { its-withinText.type }
its-attribute.withinText.nons = attribute withinText { its-withinText.type }

its-attribute.domainMapping = attribute its:domainMapping { its-domainMapping.type }
its-attribute.domainMapping.nons = attribute domainMapping { its-domainMapping.type }

its-attribute.taConfidence = attribute its:taConfidence { its-taConfidence.type }
its-attribute.taConfidence.nons = attribute taConfidence { its-taConfidence.type }

its-attribute.taClassRef = attribute its:taClassRef { its-taClassRef.type }
its-attribute.taClassRef.nons = attribute taClassRef { its-taClassRef.type }

its-attribute.taIdent = attribute its:taIdent { its-taIdent.type }
its-attribute.taIdent.nons = attribute taIdent { its-taIdent.type }

its-attribute.taIdentRef = attribute its:taIdentRef { its-taIdentRef.type }
its-attribute.taIdentRef.nons = attribute taIdentRef { its-taIdentRef.type }

its-attribute.taSource = attribute its:taSource { its-taSource.type }
its-attribute.taSource.nons = attribute taSource { its-taSource.type }

its-attribute.localeFilterList = attribute its:localeFilterList { its-localeFilterList.type }
its-attribute.localeFilterList.nons = attribute localeFilterList { its-localeFilterList.type }

its-attribute.localeFilterType = attribute its:localeFilterType { its-localeFilterType.type }
its-attribute.localeFilterType.nons = attribute localeFilterType { its-localeFilterType.type }

its-attribute.person = attribute its:person { its-person.type }
its-attribute.person.nons = attribute person { its-person.type }

its-attribute.personRef = attribute its:personRef { its-personRef.type }
its-attribute.personRef.nons = attribute personRef { its-personRef.type }

its-attribute.org = attribute its:org { its-org.type }
its-attribute.org.nons = attribute org { its-org.type }

its-attribute.orgRef = attribute its:orgRef { its-orgRef.type }
its-attribute.orgRef.nons = attribute orgRef { its-orgRef.type }

its-attribute.tool = attribute its:tool { its-tool.type }
its-attribute.tool.nons = attribute tool { its-tool.type }

its-attribute.toolRef = attribute its:toolRef { its-toolRef.type }
its-attribute.toolRef.nons = attribute toolRef { its-toolRef.type }

its-attribute.revPerson = attribute its:revPerson { its-revPerson.type }
its-attribute.revPerson.nons = attribute revPerson { its-revPerson.type }

its-attribute.revPersonRef = attribute its:revPersonRef { its-revPersonRef.type }
its-attribute.revPersonRef.nons = attribute revPersonRef { its-revPersonRef.type }

its-attribute.revOrg = attribute its:revOrg { its-revOrg.type }
its-attribute.revOrg.nons = attribute revOrg { its-revOrg.type }

its-attribute.revOrgRef = attribute its:revOrgRef { its-revOrgRef.type }
its-attribute.revOrgRef.nons = attribute revOrgRef { its-revOrgRef.type }

its-attribute.revTool = attribute its:revTool { its-revTool.type }
its-attribute.revTool.nons = attribute revTool { its-revTool.type }

its-attribute.revToolRef = attribute its:revToolRef { its-revToolRef.type }
its-attribute.revToolRef.nons = attribute revToolRef { its-revToolRef.type }

its-attribute.provRef = attribute its:provRef { its-provRef.type }
its-attribute.provRef.nons = attribute provRef { its-provRef.type }

its-attribute.provenanceRecordsRef = attribute its:provenanceRecordsRef { its-provenanceRecordsRef.type }
its-attribute.provenanceRecordsRef.nons = attribute provenanceRecordsRef { its-provenanceRecordsRef.type }

its-attribute.locQualityIssuesRef = attribute its:locQualityIssuesRef { its-locQualityIssuesRef.type }
its-attribute.locQualityIssuesRef.nons = attribute locQualityIssuesRef { its-locQualityIssuesRef.type }

its-attribute.locQualityIssueType = attribute its:locQualityIssueType { its-locQualityIssueType.type } 
its-attribute.locQualityIssueType.nons = attribute locQualityIssueType { its-locQualityIssueType.type }

its-attribute.locQualityIssueComment = attribute its:locQualityIssueComment { its-locQualityIssueComment.type }
its-attribute.locQualityIssueComment.nons = attribute locQualityIssueComment { its-locQualityIssueComment.type }

its-attribute.locQualityIssueSeverity = attribute its:locQualityIssueSeverity { its-locQualityIssueSeverity.type }
its-attribute.locQualityIssueSeverity.nons = attribute locQualityIssueSeverity { its-locQualityIssueSeverity.type }

its-attribute.locQualityIssueProfileRef = attribute its:locQualityIssueProfileRef { its-locQualityIssueProfileRef.type }
its-attribute.locQualityIssueProfileRef.nons = attribute locQualityIssueProfileRef { its-locQualityIssueProfileRef.type }

its-attribute.locQualityIssueEnabled = attribute its:locQualityIssueEnabled { its-locQualityIssueEnabled.type }
its-attribute.locQualityIssueEnabled.nons = attribute locQualityIssueEnabled { its-locQualityIssueEnabled.type }

its-attribute.locQualityRatingScore = attribute its:locQualityRatingScore { its-locQualityRatingScore.type }
its-attribute.locQualityRatingScore.nons = attribute locQualityRatingScore { its-locQualityRatingScore.type }

its-attribute.locQualityRatingVote = attribute its:locQualityRatingVote { its-locQualityRatingVote.type }
its-attribute.locQualityRatingVote.nons = attribute locQualityRatingVote { its-locQualityRatingVote.type }

its-attribute.locQualityRatingScoreThreshold = attribute its:locQualityRatingScoreThreshold { its-locQualityRatingScoreThreshold.type }
its-attribute.locQualityRatingScoreThreshold.nons = attribute locQualityRatingScoreThreshold { its-locQualityRatingScoreThreshold.type }

its-attribute.locQualityRatingVoteThreshold = attribute its:locQualityRatingVoteThreshold { its-locQualityRatingVoteThreshold.type }
its-attribute.locQualityRatingVoteThreshold.nons = attribute locQualityRatingVoteThreshold { its-locQualityRatingVoteThreshold.type }

its-attribute.locQualityRatingProfileRef = attribute its:locQualityRatingProfileRef { its-locQualityRatingProfileRef.type }
its-attribute.locQualityRatingProfileRef.nons = attribute locQualityRatingProfileRef { its-locQualityRatingProfileRef.type }

its-attribute.mtConfidence = attribute its:mtConfidence { its-mtConfidence.type }
its-attribute.mtConfidence.nons = attribute mtConfidence { its-mtConfidence.type }

its-attribute.allowedCharacters = attribute its:allowedCharacters { its-allowedCharacters.type }
its-attribute.allowedCharacters.nons = attribute allowedCharacters { its-allowedCharacters.type }

its-attribute.storageSize = attribute its:storageSize { its-storageSize.type }
its-attribute.storageSize.nons = attribute storageSize { its-storageSize.type }

its-attribute.storageEncoding = attribute its:storageEncoding { its-storageEncoding.type }
its-attribute.storageEncoding.nons = attribute storageEncoding { its-storageEncoding.type }

its-attribute.lineBreakType = attribute its:lineBreakType { its-lineBreakType.type }
its-attribute.lineBreakType.nons = attribute lineBreakType { its-lineBreakType.type }

its-attribute.annotatorsRef = attribute its:annotatorsRef { its-annotatorsRef.type }
its-attribute.annotatorsRef.nons = attribute annotatorsRef { its-annotatorsRef.type }

its-attribute.version = 
  ## Version of ITS
  attribute its:version { its-version.type }

its-attribute.version.nons = 
  ## Version of ITS
  attribute version { its-version.type }

its-attribute.queryLanguage = attribute its:queryLanguage { its-queryLanguage.type }
its-attribute.queryLanguage.nons = attribute queryLanguage { its-queryLanguage.type }

its-attribute.xlink.href = attribute xlink:href { xsd:anyURI }
its-attribute.xlink.type = attribute xlink:type { "simple" }

its-attribute.selector = attribute selector { its-absolute-selector.type }

its-foreign-attribute = attribute * - local:* { text }
its-foreign-no-xml-id-attribute = attribute * - (local:* | xml:id) { text }
its-foreign-no-xlink-attribute = attribute * - (local:* | xlink:*) { text }

its-any-attribute = attribute * { text }

its-any-element = element * { (its-any-attribute* | text | its-any-element)* }

its-foreign-element = element * - its:* { (its-any-attribute* | text | its-foreign-element)* } 

its-rules =
  ## Container for global rules
  element rules { its-rules.content, its-rules.attributes }

its-rules.content =
  its-param*,
  (its-translateRule
   | its-locNoteRule
   | its-termRule
   | its-dirRule
   | its-langRule
   | its-withinTextRule
   | its-domainRule
   | its-textAnalysisRule
   | its-localeFilterRule
   | its-provRule
   | its-locQualityIssueRule
   | its-mtConfidenceRule
   | its-externalResourceRefRule
   | its-targetPointerRule
   | its-idValueRule
   | its-preserveSpaceRule
   | its-allowedCharactersRule
   | its-storageSizeRule
   | its-foreign-element)*

its-rules.attributes =
  its-attribute.version.nons,
  (its-attribute.xlink.href, its-attribute.xlink.type?)?,
  its-attribute.queryLanguage.nons?,
  its-foreign-no-xlink-attribute*  

its-param =
  ## Declaration of variable used in selectors
  element param { its-param.content, its-param.attributes }
  
its-param.content = text

its-param.attributes =
  attribute name { xsd:string },
  its-foreign-attribute*

its-local.attributes =
  its-attribute.translate? &
  its-attribute.dir? &
  ((its-attribute.locNote | its-attribute.locNoteRef), its-attribute.locNoteType?)? &
  (its-attribute.term, its-attribute.termInfoRef?, its-attribute.termConfidence?)? &
  its-attribute.withinText? &
  (its-attribute.taConfidence? &
   (its-attribute.taClassRef? &
    ((its-attribute.taSource, its-attribute.taIdent) | its-attribute.taIdentRef)?))? &
  (its-attribute.localeFilterList, its-attribute.localeFilterType?)? &
  ((
   (its-attribute.person | its-attribute.personRef )? &
   (its-attribute.org | its-attribute.orgRef )? &
   (its-attribute.tool | its-attribute.toolRef )? &
   (its-attribute.revPerson | its-attribute.revPersonRef )? &
   (its-attribute.revOrg | its-attribute.revOrgRef )? &
   (its-attribute.revTool | its-attribute.revToolRef )? &
   its-attribute.provRef?)
   |
   its-attribute.provenanceRecordsRef)? &
  (its-attribute.locQualityIssuesRef
  | 
  ((its-attribute.locQualityIssueType? & its-attribute.locQualityIssueComment?) & its-attribute.locQualityIssueSeverity? & its-attribute.locQualityIssueProfileRef? & its-attribute.locQualityIssueEnabled?)
  )? &
  (((its-attribute.locQualityRatingScore, its-attribute.locQualityRatingScoreThreshold?) | (its-attribute.locQualityRatingVote, its-attribute.locQualityRatingVoteThreshold?)), its-attribute.locQualityRatingProfileRef?)? &
  its-attribute.mtConfidence? &
  its-attribute.allowedCharacters? &
  (its-attribute.storageSize, its-attribute.storageEncoding?, its-attribute.lineBreakType?)? &
  its-attribute.annotatorsRef?

its-local.nons.attributes =
  its-attribute.translate.nons? &
  its-attribute.dir.nons? &
  ((its-attribute.locNote.nons | its-attribute.locNoteRef.nons), its-attribute.locNoteType.nons?)? &
  (its-attribute.term.nons, its-attribute.termInfoRef.nons?, its-attribute.termConfidence.nons?)? &
  its-attribute.withinText.nons? &
  (its-attribute.taConfidence.nons? &
   (its-attribute.taClassRef.nons? &
    ((its-attribute.taSource.nons, its-attribute.taIdent.nons) | its-attribute.taIdentRef.nons)?))? &
  (its-attribute.localeFilterList.nons, its-attribute.localeFilterType.nons?)? &
  ((
   (its-attribute.person.nons | its-attribute.personRef.nons )? &
   (its-attribute.org.nons | its-attribute.orgRef.nons )? &
   (its-attribute.tool.nons | its-attribute.toolRef.nons )? &
   (its-attribute.revPerson.nons | its-attribute.revPersonRef.nons )? &
   (its-attribute.revOrg.nons | its-attribute.revOrgRef.nons )? &
   (its-attribute.revTool.nons | its-attribute.revToolRef.nons )? &
    its-attribute.provRef.nons?)
   | its-attribute.provenanceRecordsRef.nons)? &
  (its-attribute.locQualityIssuesRef.nons
  | 
  ((its-attribute.locQualityIssueType.nons? & its-attribute.locQualityIssueComment.nons?) & its-attribute.locQualityIssueSeverity.nons? & its-attribute.locQualityIssueProfileRef.nons? & its-attribute.locQualityIssueEnabled.nons?)
  )? &
  (((its-attribute.locQualityRatingScore.nons, its-attribute.locQualityRatingScoreThreshold.nons?) | (its-attribute.locQualityRatingVote.nons, its-attribute.locQualityRatingVoteThreshold.nons?)), its-attribute.locQualityRatingProfileRef.nons?)? &
  its-attribute.mtConfidence.nons? &
  its-attribute.allowedCharacters.nons? &
  (its-attribute.storageSize.nons, its-attribute.storageEncoding.nons?, its-attribute.lineBreakType.nons?)? &
  its-attribute.annotatorsRef.nons?

its-span =
  ## Inline element to contain ITS information
  element span { its-span.content, its-span.attributes }
  
its-span.content = (text | its-span)*

its-span.attributes = its-local.nons.attributes & its-foreign-attribute*

its-translateRule =
  ## Rule about the Translate data category
  element translateRule {
    its-translateRule.content, its-translateRule.attributes
  }
  
its-translateRule.content = empty
its-translateRule.attributes =
  its-attribute.selector,
  its-attribute.translate.nons,
  its-foreign-attribute*

its-locNoteRule =
  ## Rule about the Localization Note data category
  element locNoteRule {
    its-attribute.selector,
    its-attribute.locNoteType.nons,
    (its-locNote | its-attribute.locNotePointer.nons | its-attribute.locNoteRef.nons | its-attribute.locNoteRefPointer.nons ),
    its-foreign-attribute*
  }

its-attribute.locNotePointer.nons = attribute locNotePointer { its-relative-selector.type }
its-attribute.locNoteRefPointer.nons = attribute locNoteRefPointer { its-relative-selector.type }

its-locNote =
  ## Localization note
  element locNote { its-locNote.content, its-locNote.attributes }

its-locNote.content = (text | its-span)*

its-locNote.attributes = its-local.nons.attributes, its-foreign-attribute*

its-termRule =
  ## Rule about the Terminology data category
  element termRule { its-termRule.content, its-termRule.attributes }

its-termRule.content = empty
its-termRule.attributes =
  its-attribute.selector,
  its-attribute.term.nons,
  (its-attribute.termInfoPointer.nons | its-attribute.termInfoRef.nons | its-attribute.termInfoRefPointer.nons )?,
  its-foreign-attribute*

its-attribute.termInfoPointer.nons = attribute termInfoPointer { its-relative-selector.type } 

its-attribute.termInfoRefPointer.nons = attribute termInfoRefPointer { its-relative-selector.type }

its-dirRule =
  ## Rule about the Directionality data category
  element dirRule { its-dirRule.content, its-dirRule.attributes }

its-dirRule.content = empty
its-dirRule.attributes =
  its-attribute.selector,
  its-attribute.dir.nons,
  its-foreign-attribute*

its-langRule =
  ## Rule about the Language Information data category
  element langRule { its-langRule.content, its-langRule.attributes }

its-langRule.content = empty
its-langRule.attributes =
  its-attribute.selector,
  its-attribute.langPointer.nons,
  its-foreign-attribute*
  
its-attribute.langPointer.nons = attribute langPointer { its-relative-selector.type }  

its-withinTextRule =
  ## Rule about the Elements Within Text data category
  element withinTextRule {
    its-withinTextRule.content, its-withinTextRule.attributes
  }
  
its-withinTextRule.content = empty
its-withinTextRule.attributes =
  its-attribute.selector,
  its-attribute.withinText.nons,
  its-foreign-attribute*

its-domainRule =
  ## Rule about the Domain data category
  element domainRule {
    its-domainRule.content, its-domainRule.attributes
  }
  
its-domainRule.content = empty
its-domainRule.attributes =
  its-attribute.selector,
  its-attribute.domainPointer.nons,
  its-attribute.domainMapping.nons?,
  its-foreign-attribute*

its-attribute.domainPointer.nons = attribute domainPointer { its-relative-selector.type }

its-textAnalysisRule =
  ## Rule about the Disambiguation data category
  element textAnalysisRule {
    its-textAnalysisRule.content, its-textAnalysisRule.attributes
  }
  
its-textAnalysisRule.content = empty
its-textAnalysisRule.attributes =
  its-attribute.selector,
  its-attribute.taClassRefPointer.nons?,
  ((its-attribute.taSourcePointer.nons, its-attribute.taIdentPointer.nons) | its-attribute.taIdentRefPointer.nons)?,
  its-foreign-attribute*

its-attribute.taClassRefPointer.nons = attribute taClassRefPointer { its-taClassRefPointer.type }
its-attribute.taIdentPointer.nons = attribute taIdentPointer { its-taIdentPointer.type }
its-attribute.taSourcePointer.nons = attribute taSourcePointer { its-taSourcePointer.type }
its-attribute.taIdentRefPointer.nons = attribute taIdentRefPointer { its-taIdentRefPointer.type }

its-localeFilterRule =
  ## Rule about the LocaleFilter data category
  element localeFilterRule {
    its-localeFilterRule.content, its-localeFilterRule.attributes
  }
  
its-localeFilterRule.content = empty
its-localeFilterRule.attributes =
  its-attribute.selector,
  its-attribute.localeFilterList.nons,
  its-attribute.localeFilterType.nons?,
  its-foreign-attribute*
  
its-provRule =
  ## Rule about the Provenance data category
  element provRule {
    its-provRule.content, its-provRule.attributes
  }
  
its-provRule.content = empty
its-provRule.attributes =
  its-attribute.selector,
  its-attribute.provenanceRecordsRefPointer.nons,
  its-foreign-attribute*

its-attribute.provenanceRecordsRefPointer.nons = attribute provenanceRecordsRefPointer { its-relative-selector.type }

its-externalResourceRefRule =
  ## Rule about the External Resource data category
  element externalResourceRefRule {
    its-externalResourceRefRule.content,
    its-externalResourceRefRule.attributes
  }
  
its-externalResourceRefRule.content = empty
its-externalResourceRefRule.attributes =
  its-attribute.selector,
  its-attribute.externalResourceRefPointer.nons,
  its-foreign-attribute*
  
its-attribute.externalResourceRefPointer.nons = attribute externalResourceRefPointer { its-relative-selector.type }
  
its-targetPointerRule =
  ## Rule about the Target Pointer data category
  element targetPointerRule {
    its-targetPointerRule.content, its-targetPointerRule.attributes
  }
  
its-targetPointerRule.content = empty
its-targetPointerRule.attributes =
  its-attribute.selector,
  its-attribute.targetPointer.nons,
  its-foreign-attribute*
  
its-attribute.targetPointer.nons = attribute targetPointer { its-relative-selector.type }
  
its-idValueRule =
  ## Rule about the Id Value data category
  element idValueRule {
    its-idValueRule.content, its-idValueRule.attributes
  }
  
its-idValueRule.content = empty
its-idValueRule.attributes =
  its-attribute.selector,
  its-attribute.idValue.nons,
  its-foreign-attribute*
  
its-attribute.idValue.nons = attribute idValue { its-xpath-expression.type }

its-preserveSpaceRule =
  ## Rule about the Preserve Space data category
  element preserveSpaceRule {
    its-preserveSpaceRule.content, its-preserveSpaceRule.attributes
  }
  
its-preserveSpaceRule.content = empty
its-preserveSpaceRule.attributes =
  its-attribute.selector,
  its-attribute.space.nons,
  its-foreign-attribute*
  
its-attribute.space.nons = attribute space { "default" | "preserve" }

its-locQualityIssueRule =
  ## Rule about the Localization Quality Issue data category
  element locQualityIssueRule {
    its-locQualityIssueRule.content, its-locQualityIssueRule.attributes
  }
  
its-locQualityIssueRule.content = empty
its-locQualityIssueRule.attributes =
  its-attribute.selector,
  ((its-attribute.locQualityIssuesRef.nons | its-attribute.locQualityIssuesRefPointer.nons)
   |
   ((its-attribute.locQualityIssueType.nons | its-attribute.locQualityIssueComment.nons)+
  ,
  its-attribute.locQualityIssueSeverity.nons?,
  its-attribute.locQualityIssueProfileRef.nons?,
  its-attribute.locQualityIssueEnabled.nons?)),
  its-foreign-attribute*

its-attribute.locQualityIssuesRefPointer.nons = attribute locQualityIssuesRefPointer { its-relative-selector.type }

its-mtConfidenceRule =
  ## Rule about the MT Confidence data category
  element mtConfidenceRule {
    its-mtConfidenceRule.content, its-mtConfidenceRule.attributes
  }
  
its-mtConfidenceRule.content = empty
its-mtConfidenceRule.attributes =
  its-attribute.selector,
  its-attribute.mtConfidence.nons,
  its-foreign-attribute*

its-allowedCharactersRule =
  ## Rule about the Allowed Characters data category
  element allowedCharactersRule {
    its-allowedCharactersRule.content, its-allowedCharactersRule.attributes
  }
  
its-allowedCharactersRule.content = empty
its-allowedCharactersRule.attributes =
  its-attribute.selector,
  (its-attribute.allowedCharacters.nons | its-attribute.allowedCharactersPointer.nons),
  its-foreign-attribute*
  
its-attribute.allowedCharactersPointer.nons = attribute allowedCharactersPointer { its-relative-selector.type }   

its-storageSizeRule =
  ## Rule about the Allowed Characters data category
  element storageSizeRule {
    its-storageSizeRule.content, its-storageSizeRule.attributes
  }
  
its-storageSizeRule.content = empty
its-storageSizeRule.attributes =
  its-attribute.selector,
  (its-attribute.storageSize.nons | its-attribute.storageSizePointer.nons),
  (its-attribute.storageEncoding.nons | its-attribute.storageEncodingPointer.nons)?,
  its-attribute.lineBreakType.nons?,
  its-foreign-attribute*

its-attribute.storageSizePointer.nons = attribute storageSizePointer { its-relative-selector.type }
its-attribute.storageEncodingPointer.nons = attribute storageEncodingPointer { its-relative-selector.type }

its-standoff = its-provenanceRecords | its-locQualityIssues

its-provenanceRecords = 
  ## Standoff markup for Provenance data category
  element its:provenanceRecords { its-provenanceRecord+, attribute xml:id { xsd:ID }, its-attribute.version.nons?, its-foreign-no-xml-id-attribute* }

its-provenanceRecord = 
  ## Provenance record used in Provenance standoff markup
  element its:provenanceRecord { its-provenanceRecord.attributes }

its-provenanceRecord.attributes =
   (its-attribute.person.nons | its-attribute.personRef.nons )? &
   (its-attribute.org.nons | its-attribute.orgRef.nons )? &
   (its-attribute.tool.nons | its-attribute.toolRef.nons )? &
   (its-attribute.revPerson.nons | its-attribute.revPersonRef.nons )? &
   (its-attribute.revOrg.nons | its-attribute.revOrgRef.nons )? &
   (its-attribute.revTool.nons | its-attribute.revToolRef.nons )? &
    its-attribute.provRef.nons? &
   its-foreign-attribute*

its-locQualityIssues = 
  ## Standoff markup for Localization Quality Issue data category
  element its:locQualityIssues { its-locQualityIssue+, attribute xml:id { xsd:ID }, its-attribute.version.nons?, its-foreign-no-xml-id-attribute* }

its-locQualityIssue = 
  ## Issue recorded in Localization Quality standoff markup
  element its:locQualityIssue { its-locQualityIssue.attributes }

its-locQualityIssue.attributes =
  its-attribute.locQualityIssueType.nons? &
  its-attribute.locQualityIssueComment.nons? &
  its-attribute.locQualityIssueSeverity.nons? &
  its-attribute.locQualityIssueProfileRef.nons? &
  its-attribute.locQualityIssueEnabled.nons? &
  its-foreign-attribute*
  